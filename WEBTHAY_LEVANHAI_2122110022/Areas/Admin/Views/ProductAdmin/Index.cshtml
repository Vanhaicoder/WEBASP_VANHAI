@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<WEBTHAY_LEVANHAI_2122110022.Models.Product>

@{
    ViewBag.Title = "Index";
}

<style>
    .pagination {
        display: flex;
        justify-content: center;
        padding: 20px 0;
    }

        .pagination a, .pagination span {
            margin: 0 5px;
            padding: 8px 16px;
            text-decoration: none;
            color: #007bff;
            border: 1px solid #dee2e6;
            border-radius: 4px;
        }

            .pagination a:hover, .pagination a:focus {
                background-color: #e9ecef;
                color: #0056b3;
            }

        .pagination .active span {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }
</style>

<div class="content-wrapper">
    <h2>Quản lý sản phẩm </h2>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    @using (Html.BeginForm("Index", "ProductAdmin", FormMethod.Get))
    {
        <p>
            Tìm sản phẩm: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Tìm kiếm" />
        </p>
    }
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Sale_price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Detail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Brand.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Category.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().NewP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().HotP)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sale_price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <img src="~/Content/images/items/@Html.DisplayFor(modelItem => item.Image)" alt="chua lay duoc" style="width:150px" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Detail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Brand.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NewP)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HotP)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>

    Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))
</div>
